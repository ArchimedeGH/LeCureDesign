name: Build macOS DMG — final

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: "false"
      ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: "true"
      NEXT_TELEMETRY_DISABLED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Usa la cache SOLO se esiste un lock file
      - name: Setup Node (with cache)
        if: ${{ hashFiles('**/package-lock.json', '**/npm-shrinkwrap.json', '**/yarn.lock') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Node (no cache)
        if: ${{ hashFiles('**/package-lock.json', '**/npm-shrinkwrap.json', '**/yarn.lock') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            echo "Lock file presente → uso npm ci"
            npm ci --no-audit --no-fund
          else
            echo "Nessun lock file → uso npm install (legacy peer deps)"
            npm install --no-audit --no-fund --legacy-peer-deps
          fi

      - name: Nuke /viewer + ensure static viewer.html
        shell: bash
        run: |
          set -euo pipefail
          [ -d app ] && find app -type d -iname "viewer" -print -exec rm -rf {} + || true
          [ -d app ] && find app -type f -ipath "*viewer*/*" -print -delete || true
          [ -d pages ] && find pages -type d -iname "viewer" -print -exec rm -rf {} + || true
          [ -d pages ] && find pages -type f -iname "viewer.*" -print -delete || true
          mkdir -p public
          [ -f public/viewer.html ] || cat > public/viewer.html <<'HTML'
<!doctype html><title>Viewer</title><div id="app"></div><script type="module">
import * as THREE from 'https://unpkg.com/three@0.154.0/build/three.module.js';
const app=document.getElementById('app');const r=new THREE.WebGLRenderer({antialias:true});r.setSize(innerWidth,innerHeight);app.appendChild(r.domElement);
const s=new THREE.Scene();const c=new THREE.PerspectiveCamera(50,innerWidth/innerHeight,0.01,100);c.position.set(2.6,1.8,2.6);
const g=new THREE.GridHelper(5,50);s.add(g);(function loop(){r.render(s,c);requestAnimationFrame(loop)})();</script>
HTML
          ls -la public || true

      - name: Build Next (no export)
        run: npx next build

      - name: Build Electron (DMG)
        run: npx electron-builder --mac dmg

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: LeCureDesign-macOS-dmg
          path: dist/*.dmg
