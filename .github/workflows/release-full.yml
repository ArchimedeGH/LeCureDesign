name: Build macOS DMG â€” No Export, Kill Viewer (final)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: "false"
      ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: "true"
      NEXT_TELEMETRY_DISABLED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show initial repo tree (debug)
        run: |
          echo "=== START ==="
          ls -la
          echo "=== Search 'viewer' (any case) BEFORE NUKE ==="
          (grep -RIn --exclude-dir=.git -i "\bviewer\b" || true)

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install --no-audit --no-fund --legacy-peer-deps

      # ðŸ’£ Remove ANY React /viewer route so Next can't see it at build time.
      # âœ… Ensure a static Three.js viewer exists.
      - name: NUKE /viewer (case-insensitive) + ensure static viewer
        shell: bash
        run: |
          set -euo pipefail

          echo "=== BEFORE NUKE â€” files with 'viewer' in path ==="
          [ -d app ] && find app -type f -ipath "*viewer*" | sed 's/^/app: /' || true
          [ -d pages ] && find pages -type f -ipath "*viewer*" | sed 's/^/pages: /' || true

          # Remove App Router viewer dirs/files
          if [ -d app ]; then
            find app -type d -iname "viewer" -print -exec rm -rf {} + || true
            find app -type f -ipath "*viewer*/*" \( -iname "page.tsx" -o -iname "page.ts" -o -iname "page.jsx" -o -iname "page.js" -o -iname "layout.tsx" -o -iname "layout.ts" \) -print -delete || true
            find app -type f -ipath "*viewer*/*" -print -delete || true
          fi

          # Remove Pages Router variants
          if [ -d pages ]; then
            find pages -type f -iname "viewer.tsx" -print -delete || true
            find pages -type f -iname "viewer.ts" -print -delete || true
            find pages -type f -iname "viewer.jsx" -print -delete || true
            find pages -type f -iname "viewer.js" -print -delete || true
            find pages -type d -iname "viewer" -print -exec rm -rf {} + || true
          fi

          echo "=== AFTER NUKE â€” should be empty ==="
          [ -d app ] && find app -type f -ipath "*viewer*" || true
          [ -d pages ] && find pages -type f -ipath "*viewer*" || true

          echo "=== Ensure static Three.js viewer exists at public/viewer.html ==="
          mkdir -p public
          if [ ! -f public/viewer.html ]; then
            cat > public/viewer.html <<'HTML'
<!doctype html><html lang="it"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/><title>LeCureDesign â€” 3D Viewer</title><style>html,body{margin:0;height:100%}#app{width:100vw;height:100vh;overflow:hidden;background:#fafafa}.hud{position:fixed;top:8px;left:8px;padding:6px 8px;background:#fff;border:1px solid #eee;border-radius:8px;font:14px system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;color:#333}</style></head><body><div id="app"></div><div class="hud">Drag=orbit â€¢ Wheel=zoom â€¢ Shift+Drag=pan</div><script type="module">
import * as THREE from 'https://unpkg.com/three@0.154.0/build/three.module.js'
import { OrbitControls } from 'https://unpkg.com/three@0.154.0/examples/jsm/controls/OrbitControls.js'
const proposals = JSON.parse(localStorage.getItem('skp_proposals')||'[]'); const proposal = proposals[0]||{cabinets:[]};
const app = document.getElementById('app');
const r = new THREE.WebGLRenderer({antialias:true});
r.setSize(app.clientWidth, app.clientHeight);
r.setPixelRatio(Math.min(devicePixelRatio,2));
r.shadowMap.enabled=true; r.shadowMap.type=THREE.PCFSoftShadowMap;
r.toneMapping=THREE.ACESFilmicToneMapping; r.outputColorSpace=THREE.SRGBColorSpace;
app.appendChild(r.domElement);
const scene=new THREE.Scene(); scene.background=new THREE.Color('#fafafa');
const camera=new THREE.PerspectiveCamera(50, app.clientWidth/app.clientHeight, 0.01, 100); camera.position.set(2.6,1.8,2.6);
const controls=new OrbitControls(camera, r.domElement); controls.target.set(1.5,0.8,0.3); controls.update();
scene.add(new THREE.AmbientLight(0xffffff,0.35));
const dir=new THREE.DirectionalLight(0xffffff,0.9); dir.position.set(3,5,3); dir.castShadow=true; dir.shadow.radius=4; dir.shadow.mapSize.set(2048,2048); scene.add(dir);
const floor=new THREE.Mesh(new THREE.PlaneGeometry(5,5), new THREE.MeshStandardMaterial({color:'#f0f0f0',roughness:0.95})); floor.rotation.x=-Math.PI/2; floor.receiveShadow=true; scene.add(floor);
const grid=new THREE.GridHelper(5,50,0xdddddd,0xeeeeee); grid.position.y=0.001; scene.add(grid);
const matWhite=new THREE.MeshStandardMaterial({color:'#f5f5f5',roughness:0.8}); const matOak=new THREE.MeshStandardMaterial({color:'#d9c3a1',roughness:0.6,metalness:0.1});
function addBox(w,d,h,x,y,z,oak=false){const m=new THREE.Mesh(new THREE.BoxGeometry(w/100,h/100,d/100), oak?matOak:matWhite); m.position.set(x/100,y/100,z/100); m.castShadow=m.receiveShadow=true; scene.add(m); return m;}
const frontZ=30; let totalBaseW=0;
for(const c of proposal.cabinets||[]){const tall=c.kind==='tall'; const h=tall?210:75; const y=h/2; const x=c.x_cm + c.w_cm/2; addBox(c.w_cm, c.d_cm ?? 63, h, x, y, frontZ, false); if(!tall) totalBaseW+=c.w_cm;}
if(totalBaseW>0){const topH=4; addBox(totalBaseW,63,topH,totalBaseW/2,75+topH/100,frontZ,true);}
addEventListener('resize', ()=>{ r.setSize(app.clientWidth,app.clientHeight); camera.aspect=app.clientWidth/app.clientHeight; camera.updateProjectionMatrix(); });
(function loop(){ r.render(scene,camera); requestAnimationFrame(loop); })();
</script></body></html>
HTML
          fi

          echo "PUBLIC DIR:"; ls -la public

      # ðŸ›‘ IMPORTANT: build ONLY (NO next export)
      - name: Build Next (no export)
        run: npx next build

      - name: Build Electron (DMG)
        run: npx electron-builder --mac dmg

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: LeCureDesign-macOS-dmg
          path: dist/*.dmg

      - name: Create prerelease with DMG
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ci-${{ github.run_id }}-${{ github.run_attempt }}
          name: "LeCureDesign Installer"
          body: "âœ… Pipeline DMG ok. Puoi installare questa app sul Mac."
          draft: false
          prerelease: true
          files: dist/*.dmg
