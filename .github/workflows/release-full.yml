name: Build macOS DMG (Full Planner, auto-release)

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  CSC_IDENTITY_AUTO_DISCOVERY: "false"
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: "true"

jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # âœ… Genera un package.json PERFETTO (niente JSON incollato a mano)
      - name: Generate package.json via npm
        run: |
          rm -f package.json
          npm init -y
          npm pkg set name="scandi-kitchen-desktop"
          npm pkg set version="0.1.0"
          npm pkg set private=true
          npm pkg set main="electron/main.js"
          npm pkg set type="module"
          npm pkg set scripts.build:web="next build"
          npm pkg set scripts.build:app="electron-builder --mac dmg --arm64"
          npm pkg set scripts.build="npm run build:web && npm run build:app"

          # Dipendenze compatibili: React 18 + R3F 8.x
          npm pkg set dependencies.next="15.0.0"
          npm pkg set dependencies.react="18.3.1"
          npm pkg set dependencies.react-dom="18.3.1"
          npm pkg set dependencies.@react-three/fiber="^8.15.0"
          npm pkg set dependencies.@react-three/drei="^9.105.0"
          npm pkg set dependencies.konva="^9.3.11"
          npm pkg set dependencies.pdf-lib="^1.17.1"
          npm pkg set dependencies.react-konva="^18.2.9"
          npm pkg set dependencies.three="^0.154.0"

          npm pkg set devDependencies.concurrently="8.2.2"
          npm pkg set devDependencies.electron="31.2.0"
          npm pkg set devDependencies.electron-builder="24.13.3"
          npm pkg set devDependencies.get-port="7.1.0"
          npm pkg set devDependencies.wait-on="7.2.0"
          npm pkg set devDependencies.typescript="5.6.2"
          npm pkg set devDependencies.@types/react="^18.3.0"
          npm pkg set devDependencies.@types/react-dom="^18.3.0"

          # Config electron-builder (niente JSON manuale: set con chiavi)
          npm pkg set build.appId="com.archimedekh.lecuredesign"
          npm pkg set build.files[0]="electron/**/*"
          npm pkg set build.files[1]="app/**/*"
          npm pkg set build.files[2]="public/**/*"
          npm pkg set build.files[3]="package.json"
          npm pkg set build.files[4]="next.config.mjs"
          npm pkg set build.files[5]="tsconfig.json"
          npm pkg set build.files[6]="!.next/cache/**"
          npm pkg set build.extraResources[0].from=".next/standalone"
          npm pkg set build.extraResources[0].to="next-standalone"
          npm pkg set build.extraResources[1].from=".next/static"
          npm pkg set build.extraResources[1].to="next-static"
          npm pkg set build.extraResources[2].from="public"
          npm pkg set build.extraResources[2].to="public"
          npm pkg set build.mac.target[0]="dmg"
          npm pkg set build.mac.category="public.app-category.graphics-design"
          npm pkg set build.mac.hardenedRuntime=false
          npm pkg set build.mac.gatekeeperAssess=false
          npm pkg set build.dmg.artifactName="LeCureDesign-\${version}-mac-arm64.\${ext}"

          echo "----- package.json -----"
          cat package.json

      - name: Print versions
        run: |
          node -v
          npm -v
          npx electron-builder --version

      - name: Install deps
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Build Next (standalone)
        run: npm run build:web

      - name: Build Electron DMG (arm64)
        run: npx electron-builder --mac dmg --arm64
        env:
          DEBUG: electron-builder

      - name: List dist
        run: ls -la dist || true

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: LeCureDesign-Full
          path: dist/*.dmg

      - name: Create & push tag
        run: |
          TAG="v${GITHUB_RUN_NUMBER}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Auto tag $TAG" || true
          git push origin "$TAG" || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "LeCureDesign ${{ env.TAG }}"
          files: dist/*.dmg
          generate_release_notes: true
